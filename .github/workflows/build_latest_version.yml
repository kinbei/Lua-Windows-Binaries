name: Build

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'
  
jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install lxml requests

    - name: Extract Lua Version
      id: extract_lua_version
      shell: bash
      run: |
        package_name=$(python - <<EOF
        import requests
        import sys
        from lxml import html
        
        response = requests.get("https://www.lua.org/ftp/")
        html_content = response.text
        
        tree = html.fromstring(html_content)
        td_element = tree.xpath("/html/body/table[1]/tr[2]/td[1]/a")
        
        if td_element:
            package_name = td_element[0].text_content().strip()
            print(package_name)
        else:
            sys.stderr.write("Unable to find Lua version.\n")
            sys.exit(1)
        EOF
        )

        echo "LUA_PACKAGE_NAME=$package_name" >> $GITHUB_OUTPUT
        echo "LUA_VERSION=$(basename "$package_name" .tar.gz)" >> $GITHUB_OUTPUT

    - name: Download Lua
      uses: suisei-cn/actions-download-file@v1
      with:
        url: "http://www.lua.org/ftp/${{ steps.extract_lua_version.outputs.LUA_PACKAGE_NAME }}"
        target: .
          
    - name: Make
      run: |
        tar zxf "${{ steps.extract_lua_version.outputs.LUA_PACKAGE_NAME }}"
        cd "${{ steps.extract_lua_version.outputs.LUA_VERSION }}"
        make generic

    - name: Zip
      run: |
        Compress-Archive -Path ${{ steps.extract_lua_version.outputs.LUA_VERSION }}/src/lua.exe -Destination Lua.zip

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.ACTIONS_REMOTE_BUILD_TOKEN }}
        file: Lua.zip
        asset_name: Lua.zip
        tag: ${{ steps.extract_lua_version.outputs.LUA_VERSION }}
        overwrite: true
        body: "Lua.exe"
